<ResourceDictionary
    x:Class="WorkOrderGUI.DataTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:w="http://schemas.microsoft.com/wpf/2008/toolkit"
    xmlns:g="clr-namespace:WorkOrderGUI"
    xmlns:d="clr-namespace:HLGranite.Drawing;assembly=HLGranite.Drawing"
    xmlns:i="clr-namespace:Microsoft.Expression.Interactivity;assembly=Microsoft.Expression.Interactivity">
    
    <g:GlobaliztionResource x:Key="Resource"/>
    
    <g:VisibilityConverter x:Key="VisibilityConverter"/>
    <g:NumberConverter x:Key="NumberConverter"/>
    <g:ShortDateConverter x:Key="ShortDateConverter"/>
    <g:PercentageConverter x:Key="PercentageConverter"/>
    <g:UomStringConverter x:Key="UomStringConverter"/>
    <g:UomUnitConverter x:Key="UomUnitConverter"/>
    <g:IndexConverter x:Key="IndexConverter"/>
    <g:LabelingConverter x:Key="LabelingConverter"/>
    <g:FeetUnitConverter x:Key="FeetUnitConverter"/>
    <g:MarginConverter x:Key="MarginConverter"/>
    <g:TopMarginConverter x:Key="TopMarginConverter"/>
    <g:LeftMarginConverter x:Key="LeftMarginConverter"/>
    <g:CompanyAllInfoConverter x:Key="CompanyAllInfoConverter"/>
    <g:SoldToConverter x:Key="SoldToConverter"/>
    <g:ShapeItemOnlyConverter x:Key="ShapeItemOnlyConverter"/>
    <g:WorkItemOnlyConverter x:Key="WorkItemOnlyConverter"/>
    <g:BullnoseViewModelConverter x:Key="BullnoseViewModelConverter"/>
    <g:ParentOrChildSelector x:Key="ParentOrChildSelector"/>
    
    <g:PageTemplateSelector x:Key="PageTemplateSelector"/>
    <g:WorkItemTemplateSelector x:Key="WorkItemTemplateSelector"/>
    
    <g:BullnoseManager x:Key="BullnoseManager"/>
    
    <!-- this is for drawing use-->
    <DataTemplate x:Key="LShapeItem04">
        <Canvas>
            <Canvas.Resources>
                <DataTemplate DataType="{x:Type d:VerticalLine}">
                    <Line X1="{Binding Left}" Y1="0" X2="{Binding Left}" Y2="120" Style="{StaticResource DotStyle}"/>
                </DataTemplate>
            </Canvas.Resources>
            <Canvas.Margin>
                <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="Left"/>
                    <Binding Path="Top"/>
                </MultiBinding>
            </Canvas.Margin>
            <Rectangle Width="120" Height="420" Stroke="Black" StrokeThickness="1"/>
            <Rectangle Width="300" Height="120" Stroke="Black" Fill="White" StrokeThickness="1"/>
            <Rectangle Width="120" Height="420" Stroke="Black" Fill="White" Visibility="Hidden" StrokeThickness="1"/>

            <Ellipse Visibility="{Binding Lengths[0].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource BullnoseCircle}" Canvas.Left="-8" Canvas.Top="210"/>
            <Canvas x:Name="Length0" Canvas.Left="-36">
                <Line X1="10" Y1="0" X2="10" Y2="420" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="0" Y1="0" X2="24" Y2="0" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="0" Y1="420" X2="24" Y2="420" Stroke="Blue" StrokeThickness="1"/>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="15" Canvas.Top="10">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                            <RotateTransform Angle="90"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="4" Canvas.Top="410">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                            <RotateTransform Angle="270"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <TextBlock
                    Margin="0,210,0,0" Style="{DynamicResource MeasurementStyle}"
                    Text="{Binding MaxHeight,Converter={StaticResource FeetUnitConverter},Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            </Canvas>
            <Ellipse Visibility="{Binding Lengths[1].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource BullnoseCircle}" Canvas.Left="50" Canvas.Top="412"/>
            <Canvas x:Name="Length1" Canvas.Top="432">
                <Line X1="0" Y1="10" X2="120" Y2="10" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="0" Y1="0" X2="0" Y2="24" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="120" Y1="0" X2="120" Y2="24" Stroke="Blue" StrokeThickness="1"/>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="10" Canvas.Top="5">
                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                    </Path.RenderTransform>
                </Path>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="110" Canvas.Top="5">
                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="0.25" ScaleY="0.25" />
                    </Path.RenderTransform>
                </Path>
                <TextBlock
                    Margin="60,0,0,0" Style="{DynamicResource MeasurementStyle}"
                    Text="{Binding Lengths[1].Length,Converter={StaticResource FeetUnitConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            </Canvas>
            <Ellipse Visibility="{Binding Lengths[2].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource BullnoseCircle}" Canvas.Left="112" Canvas.Top="210"/>
            <Ellipse Visibility="{Binding Lengths[3].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource BullnoseCircle}" Canvas.Left="150" Canvas.Top="110"/>
            <Ellipse Visibility="{Binding Lengths[4].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource BullnoseCircle}" Canvas.Left="292" Canvas.Top="50"/>
            <Canvas x:Name="Length4" Canvas.Left="312">
                <Line X1="10" Y1="0" X2="10" Y2="120" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="0" Y1="0" X2="24" Y2="0" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="0" Y1="120" X2="24" Y2="120" Stroke="Blue" StrokeThickness="1"/>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="15" Canvas.Top="10">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                            <RotateTransform Angle="90"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="4" Canvas.Top="110">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                            <RotateTransform Angle="270"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <TextBlock Margin="0,50,0,0" Style="{DynamicResource MeasurementStyle}" Text="{Binding Lengths[4].Length,Converter={StaticResource FeetUnitConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            </Canvas>
            <Ellipse Visibility="{Binding Lengths[5].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource BullnoseCircle}" Canvas.Left="150" Canvas.Top="-8"/>
            <Canvas x:Name="Length5" Canvas.Top="-36">
                <Line X1="0" Y1="10" X2="300" Y2="10" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="0" Y1="0" X2="0" Y2="24" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="300" Y1="0" X2="300" Y2="24" Stroke="Blue" StrokeThickness="1"/>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="10" Canvas.Top="5">
                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                    </Path.RenderTransform>
                </Path>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="290" Canvas.Top="5">
                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="0.25" ScaleY="0.25" />
                    </Path.RenderTransform>
                </Path>
                <TextBlock Margin="150,0,0,0" Canvas.Left="-20" Style="{DynamicResource MeasurementStyle}" Text="{Binding MaxWidth,Converter={StaticResource FeetUnitConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            </Canvas>
            <ItemsControl ItemsSource="{Binding Elements,Converter={StaticResource ShapeItemOnlyConverter}}"/>
        </Canvas>
    </DataTemplate>
    <DataTemplate x:Key="RectItem00">
        <Canvas>
            <Canvas.Resources>
                <DataTemplate DataType="{x:Type d:VerticalLine}">
                    <Line X1="{Binding Left}" Y1="0" X2="{Binding Left}" Y2="80" Style="{StaticResource DotStyle}"/>
                </DataTemplate>
            </Canvas.Resources>
            <Canvas.Margin>
                <MultiBinding Converter="{StaticResource MarginConverter}">
                    <Binding Path="Left"/>
                    <Binding Path="Top"/>
                </MultiBinding>
            </Canvas.Margin>
            <Rectangle Width="200" Height="80" Stroke="Black" Fill="White" StrokeThickness="1"/>
            <Ellipse Style="{StaticResource BullnoseCircle}" Canvas.Left="-8" Canvas.Top="32"
                     Visibility="{Binding Lengths[0].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"/>
            <Ellipse Style="{StaticResource BullnoseCircle}" Canvas.Left="92" Canvas.Top="72"
                     Visibility="{Binding Lengths[1].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"/>
            <Ellipse Style="{StaticResource BullnoseCircle}" Canvas.Left="192" Canvas.Top="32"
                     Visibility="{Binding Lengths[2].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"/>
            <Canvas x:Name="Length2" Canvas.Left="212">
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="17" Canvas.Top="10">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                            <RotateTransform Angle="90"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="7" Canvas.Top="70">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                            <RotateTransform Angle="270"/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
                <Line X1="0" Y1="0" X2="24" Y2="0" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="0" Y1="80" X2="24" Y2="80" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="12" Y1="0" X2="12" Y2="80" Stroke="Blue" StrokeThickness="1"/>
                <TextBlock
                    Margin="0,30,0,0" Style="{DynamicResource MeasurementStyle}"
                    Text="{Binding Height,Mode=TwoWay,Converter={StaticResource FeetUnitConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            </Canvas>
            <Ellipse Style="{StaticResource BullnoseCircle}" Canvas.Left="92" Canvas.Top="-8"
                     Visibility="{Binding Lengths[3].Type,Mode=TwoWay,Converter={StaticResource VisibilityConverter},UpdateSourceTrigger=PropertyChanged}"/>
            <Canvas x:Name="Length3" Canvas.Top="-36">
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="10" Canvas.Top="6">
                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="-0.25" ScaleY="0.25" />
                    </Path.RenderTransform>
                </Path>
                <Path Fill="Blue" Data="M 0 40 L 40 20 L 0 0 Z" Canvas.Left="190" Canvas.Top="6">
                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="0.25" ScaleY="0.25" />
                    </Path.RenderTransform>
                </Path>
                <Line X1="0" Y1="10" X2="200" Y2="10" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="0" Y1="0" X2="0" Y2="24" Stroke="Blue" StrokeThickness="1"/>
                <Line X1="200" Y1="0" X2="200" Y2="24" Stroke="Blue" StrokeThickness="1"/>
                <TextBlock
                    Margin="90,0,0,0" Style="{DynamicResource MeasurementStyle}"
                    Text="{Binding Width,Mode=TwoWay,Converter={StaticResource FeetUnitConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            </Canvas>
            <ItemsControl ItemsSource="{Binding Elements,Converter={StaticResource ShapeItemOnlyConverter}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Canvas>
    </DataTemplate>
    
    
    <!-- this is for control panel use -->
    <DataTemplate DataType="{x:Type d:LengthItem}">
        <StackPanel x:Name="Container" Orientation="Horizontal" DataContext="{Binding}">
            <TextBlock Width="60" HorizontalAlignment="Right" Margin="0,0,4,0">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource IndexConverter}">
                            <Binding/>
                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type ItemsControl}}" Path="ItemsSource"/>
                        </MultiBinding>
                    </TextBlock.Text>
            </TextBlock>
            <TextBox Text="{Binding Length,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            <!-- todo: replace with graphical in ComboBox: Style="{StaticResource BullnoseSelection}" -->
            <ComboBox
                DisplayMemberPath="Bullnose.Model"
                ItemsSource="{Binding Source={StaticResource BullnoseManager},Path=Bullnoses}"
                SelectedItem="{Binding Type,Converter={StaticResource BullnoseViewModelConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type d:RectItem}">
        <Grid Margin="0,0,0,20" Background="Beige" DataContext="{Binding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource LabelingConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding/>
                        <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Expander}}" Path="DataContext"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <ComboBox Grid.Row="0" Grid.Column="1"
                      Visibility="{Binding Parent,Converter={StaticResource VisibilityConverter}}"
                      ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TabControl}},Path=DataContext.Database.Stocks.Stock}"
                      SelectedItem="{Binding Material,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Size" HorizontalAlignment="Right" Margin="0,0,4,0"/>
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                <TextBox Width="50" Text="{Binding Width,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="×" Margin="4,0,4,0"/>
                <TextBox Width="50" Text="{Binding Height,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                <Button Style="{StaticResource BorderlessButton}" ToolTip="Split" Margin="4,0,4,0"
                        Command="{Binding AddElementCommand}"
                        Visibility="{Binding Parent,Converter={StaticResource VisibilityConverter}}">
                    <Image Height="16" Source="..\Images\add.png"/>
                </Button>
                <Button Style="{StaticResource BorderlessButton}" ToolTip="Remove" Margin="4,0,4,0"
                        Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Expander}},Path=DataContext.RemoveWorkItemCommand}"
                        CommandParameter="{Binding}">
                    <Image Height="16" Source="..\Images\cross.png"/>
                </Button>
            </StackPanel>
            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                <ItemsControl ItemsSource="{Binding Elements,Converter={StaticResource WorkItemOnlyConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                <ItemsControl Visibility="{Binding Parent,Converter={StaticResource VisibilityConverter}}"
                    ItemsSource="{Binding Lengths,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type d:WorkItem}">
        <Grid Margin="0,0,0,20" DataContext="{Binding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding .,Converter={StaticResource IndexConverter}}"/>-->
            <WrapPanel Grid.Row="0" Grid.Column="1">
                <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TabControl}},Path=DataContext.Database.Stocks.Stock}"
                          SelectedItem="{Binding Material,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                <Button Style="{StaticResource BorderlessButton}" ToolTip="Split" Margin="4,0,4,0"
                        Command="{Binding AddElementCommand}">
                    <Image Height="16" Source="..\Images\add.png"/>
                </Button>
                <Button Style="{StaticResource BorderlessButton}" ToolTip="Remove" Margin="4,0,4,0"
                        Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Grid},AncestorLevel=2},Path=DataContext.Item.WorkOrders[0].RemoveWorkItemCommand}"
                        CommandParameter="{Binding}">
                    <Image Height="16" Source="..\Images\cross.png"/>
                </Button>
            </WrapPanel>
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Size" HorizontalAlignment="Right" Margin="0,0,4,0"/>
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                <TextBox Width="50" Text="{Binding MaxWidth,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="×" Margin="4,0,4,0"/>
                <TextBox Width="50" Text="{Binding MaxHeight,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                <ItemsControl ItemsSource="{Binding Elements,Converter={StaticResource WorkItemOnlyConverter},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                <ItemsControl ItemsSource="{Binding Lengths,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                              Visibility="{Binding Parent,Converter={StaticResource VisibilityConverter}}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="ProjectTemplate">
        <Grid Style="{DynamicResource GridBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="270"/>
            </Grid.ColumnDefinitions>

            <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                          KeyUp="ScrollViewer_KeyUp" MouseLeftButtonUp="ScrollViewer_MouseLeftButtonUp">
                <Canvas x:Name="DrawingArea" Margin="40" Height="1280" Width="800" MouseLeftButtonDown="DrawingArea_MouseLeftButtonDown">
                    <ItemsControl ItemsSource="{Binding Item.WorkOrders[0].Items}" ItemTemplateSelector="{StaticResource WorkItemTemplateSelector}"/>
                </Canvas>
            </ScrollViewer>

            <ScrollViewer Grid.Column="1" Width="270" HorizontalAlignment="Right" HorizontalScrollBarVisibility="Disabled">
                <StackPanel>
                    <Expander Header="Project" Style="{DynamicResource ExpanderBackground}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"  Grid.Column="0" Text="Reference No."/>
                            <TextBlock Grid.Row="0"  Grid.Column="1" Text="{Binding Item.CreatedAt,Converter={StaticResource NumberConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Received Date"/>
                            <w:DatePicker Grid.Row="1" Grid.Column="1" SelectedDate="{Binding Item.CreatedAt,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}" SelectedDateFormat="Long"/>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Deliver Date"/>
                            <w:DatePicker Grid.Row="2" Grid.Column="1" SelectedDate="{Binding Item.DueDate,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Status"/>
                            <ComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Source={StaticResource ProjectStageEnums}}" SelectedValue="{Binding Item.Stage,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Row="4" Grid.Column="0" Text="Created By"/>
                            <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Item.CreatedBy.EmailAddresses[0],ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="5" Grid.Column="0" Text="Order By"/>
                            <TextBox Grid.Row="5" Grid.Column="1" Style="{DynamicResource InputTextBox}" Text="{Binding Item.OrderBy.GivenName,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="6" Grid.Column="0" Text="Customer"/>
                            <TextBox Grid.Row="6" Grid.Column="1" Style="{DynamicResource InputTextBox}" Text="{Binding Item.DeliverTo.GivenName,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="7" Grid.Column="0" Text="Phone"/>
                            <TextBox Grid.Row="7" Grid.Column="1" Style="{DynamicResource InputTextBox}" Text="{Binding Item.DeliverTo.Phones[0].FullNumber,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="8" Grid.Column="0" Text="Street"/>
                            <TextBox Grid.Row="8" Grid.Column="1" Style="{DynamicResource InputTextBox}" MinLines="2" Text="{Binding Item.DeliverTo.DeliveryAddresses[0].Street,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="9" Grid.Column="0" Text="City"/>
                            <TextBox Grid.Row="9" Grid.Column="1" Style="{DynamicResource InputTextBox}" Text="{Binding Item.DeliverTo.DeliveryAddresses[0].City,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="10" Grid.Column="0" Text="Postcode"/>
                            <TextBox Grid.Row="10" Grid.Column="1" Style="{DynamicResource InputTextBox}" Text="{Binding Item.DeliverTo.DeliveryAddresses[0].PostalCode,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="11" Grid.Column="0" Text="GPS"/>
                            <WrapPanel Grid.Row="11" Grid.Column="1">
                                <TextBox Style="{DynamicResource InputTextBox}" Width="60" Text="{Binding Item.DeliverTo.Latitude,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text=" "/>
                                <TextBox Style="{DynamicResource InputTextBox}" Width="60" Text="{Binding Item.DeliverTo.Longitude,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            </WrapPanel>

                            <TextBlock Grid.Row="12" Grid.Column="0" Text="Remarks"/>
                            <TextBox Grid.Row="12" Grid.Column="1" Style="{DynamicResource InputTextBox}" MinLines="3" AcceptsReturn="True" Text="{Binding Item.Notes,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Expander>
                    <Expander Header="Summary" Style="{DynamicResource ExpanderBackground}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Granite"/>
                            <ComboBox Grid.Row="0" Grid.Column="1"
                                      ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TabControl}},Path=DataContext.Database.Stocks.Stock}"
                                      SelectedItem="{Binding Item.WorkOrders[0].Items[0].Material,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Progress"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Item.Progress,Converter={StaticResource PercentageConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Total Area"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Item.TotalArea,Converter={StaticResource NumberConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Total Long"/>
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Item.TotalLong,Converter={StaticResource NumberConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="4" Grid.Column="0" Text="Total Polish"/>
                            <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Item.TotalPolish,Converter={StaticResource NumberConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="5" Grid.Column="0" Text="Other"/>
                            <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding Item.TotalOther,Converter={StaticResource NumberConverter},ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Expander>
                    <Expander Header="History" Style="{DynamicResource ExpanderBackground}"/><!-- TODO -->
                    <Expander Header="Raw Materials" Style="{DynamicResource ExpanderBackground}"/><!-- TODO -->
                    <Expander Header="Details" Style="{DynamicResource ExpanderBackground}"
                              DataContext="{Binding Item.WorkOrders[0]}"><!-- TODO: Change to support multiple WorkOrder -->
                        <StackPanel>
                            <ItemsControl ItemsSource="{Binding Items,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="StockTemplate">
        <Grid x:Name="StockGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <GroupBox Header="All" Grid.Column="0">
                <ListView x:Name="StockView" DisplayMemberPath="Name1" ItemsSource="{Binding Path=Item.Stock,UpdateSourceTrigger=PropertyChanged}"/>
            </GroupBox>
            <DockPanel Grid.Column="1" LastChildFill="True" DataContext="{Binding ElementName=StockView,Path=SelectedItem}">
                <WrapPanel DockPanel.Dock="Bottom" HorizontalAlignment="Right" DataContext="{Binding ElementName=StockGrid,Path=DataContext.Item}">
                    <Button Style="{StaticResource DefaultButtonStyle}" Command="{Binding NewStock}">Add</Button>
                    <Button Style="{StaticResource DefaultButtonStyle}" Command="{Binding SaveStock}" ToolTip="Save all into database">Save</Button>
                    <Button Content="Delete" Style="{StaticResource DefaultButtonStyle}" Tag="{Binding RemoveStock}" CommandParameter="{Binding ElementName=StockView,Path=SelectedItem}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <g:ConfirmCommandAction/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Style="{StaticResource DefaultButtonStyle}" Command="{Binding RefreshStock}" ToolTip="Discard all changes">Reset</Button>
                </WrapPanel>
                <DockPanel LastChildFill="True" DockPanel.Dock="Top">
                    <GroupBox DockPanel.Dock="Right">
                        <GroupBox.Header>
                            <WrapPanel>
                                <TextBlock Text="Stock In"/>
                                <Button Margin="4,0,0,4" Width="20" Height="20">+</Button>
                            </WrapPanel>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Warehouse"/>
                            <ComboBox Grid.Row="0" Grid.Column="1"
                                  ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TabControl}},Path=DataContext.Database.Warehouses.Warehouse}"
                                  SelectedItem="{Binding Warehouse,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Date"/>
                            <w:DatePicker Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Size"/>
                            <WrapPanel Grid.Row="2" Grid.Column="1">
                                <TextBox Width="40" />
                                <TextBlock Margin="4,0,4,0" Text="×"/>
                                <TextBox Width="40" />
                            </WrapPanel>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Quantity"/>
                            <TextBox Grid.Row="3" Grid.Column="1"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Details">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Code"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Code,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Name"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name1,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Chinese"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Name2,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Remarks"/>
                            <TextBox Grid.Row="3" Grid.Column="1" MinLines="3" AcceptsReturn="True" Text="{Binding Notes,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </GroupBox>
                </DockPanel>
                <w:DataGrid/>
            </DockPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="WarehouseTemplate">
        <Grid x:Name="WarehouseGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <GroupBox Header="All" Grid.Column="0">
                <ListView x:Name="WarehouseView" DisplayMemberPath="Name1" ItemsSource="{Binding Path=Item.Warehouse,UpdateSourceTrigger=PropertyChanged}"/>
            </GroupBox>
            <DockPanel Grid.Column="1" LastChildFill="True" DataContext="{Binding ElementName=WarehouseView,Path=SelectedItem}">
                <WrapPanel DockPanel.Dock="Bottom" HorizontalAlignment="Right" DataContext="{Binding ElementName=WarehouseGrid,Path=DataContext.Item}">
                    <Button Style="{StaticResource DefaultButtonStyle}" Command="{Binding NewWarehouse}">Add</Button>
                    <Button Style="{StaticResource DefaultButtonStyle}" Command="{Binding SaveWarehouse}" ToolTip="Save all into database">Save</Button>
                    <Button Content="Delete" Style="{StaticResource DefaultButtonStyle}" Tag="{Binding RemoveWarehouse}" CommandParameter="{Binding ElementName=WarehouseView,Path=SelectedItem}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <g:ConfirmCommandAction/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Style="{StaticResource DefaultButtonStyle}" Command="{Binding RefreshWarehouse}" ToolTip="Discard all changes">Reset</Button>
                </WrapPanel>
                <GroupBox DockPanel.Dock="Top" Header="Details">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Code"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Code,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Name"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name1,Mode=TwoWay,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Address"/>
                        <TextBox Grid.Row="2" Grid.Column="1" MinLines="2" AcceptsReturn="True" Text="{Binding Addresses[0].Street,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock Grid.Row="3" Grid.Column="0" Text="City"/>
                        <Grid Grid.Row="3" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Text="{Binding Addresses[0].City,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Column="1" Text="PostCode" TextAlignment="Right"/>
                            <TextBox Grid.Column="2" Text="{Binding Addresses[0].PostalCode,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>

                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Remarks"/>
                        <TextBox Grid.Row="4" Grid.Column="1" MinLines="3" AcceptsReturn="True" Text="{Binding Notes,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </GroupBox>
                <w:DataGrid/>
            </DockPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="SettingTemplate">
	  <ScrollViewer>
        <DockPanel Margin="10" DataContext="{Binding Source={x:Static g:Properties.Settings.Default}}">
            <WrapPanel DockPanel.Dock="Bottom" HorizontalAlignment="Right">
                <Button Style="{StaticResource DefaultButtonStyle}" Command="{Binding SaveSetting}">Save</Button>
                <Button Style="{StaticResource DefaultButtonStyle}">Reset</Button>
            </WrapPanel>
            <StackPanel>
                <GroupBox Header="Setting" Width="500" Padding="4" Margin="0,0,0,10" HorizontalAlignment="Left">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Path=AString, Source={StaticResource Resource},Mode=OneWay,Converter={StaticResource Resource}, ConverterParameter=User}" />
                        <WrapPanel Grid.Row="0" Grid.Column="1">
                            <TextBox Text="{Binding Gmail,Mode=TwoWay}"/>
                            <TextBlock Text="@gmail.com"/>
                        </WrapPanel>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding Path=AString, Source={StaticResource Resource},Mode=OneWay,Converter={StaticResource Resource}, ConverterParameter=Password}"/>
                        <PasswordBox Grid.Row="1" Grid.Column="1" PasswordChar="*" g:PasswordHelper.Attach="True" g:PasswordHelper.Password="{Binding Password,Mode=TwoWay}"/>
                        
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Language"/>
                        <WrapPanel Grid.Row="2" Grid.Column="1">
                            <ComboBox ItemsSource="{Binding Source={StaticResource LanguageEnums}}" SelectedValue="{Binding Language,Mode=TwoWay}"/>
                        </WrapPanel>
                        
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Theme"/>
                        <WrapPanel Grid.Row="3" Grid.Column="1">
                            <ComboBox ItemsSource="{Binding Source={StaticResource ThemeEnums}}" SelectedValue="{Binding Theme,Mode=TwoWay}"/>
                        </WrapPanel>

                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Number Format"/>
                        <WrapPanel Grid.Row="4" Grid.Column="1">
                            <ComboBox ItemsSource="{Binding Source={StaticResource NumberFormatEnums}}" SelectedValue="{Binding NumberFormat,Mode=TwoWay}"/>
                        </WrapPanel>

                        <TextBlock Grid.Row="5" Grid.Column="0" Text="Uom" ToolTip="Unit of Measurement"/>
                        <WrapPanel Grid.Row="5" Grid.Column="1">
                            <ComboBox ItemsSource="{Binding Source={StaticResource UomEnums}}" SelectedValue="{Binding Uom,Mode=TwoWay}" />
                            <TextBlock Margin="4,0,0,0" Text="{Binding Uom,Mode=OneWay,Converter={StaticResource UomStringConverter}}"/>
                        </WrapPanel>

                        <TextBlock Grid.Row="6" Grid.Column="0" Text="Buffer"/>
                        <WrapPanel Grid.Row="6" Grid.Column="1">
                            <TextBox Width="30" HorizontalAlignment="Left" Text="{Binding Buffer,Mode=TwoWay}"/>
                            <TextBlock Margin="4,0,0,0" Text="{Binding Uom,Mode=OneWay,Converter={StaticResource UomUnitConverter}}"/>
                        </WrapPanel>

                        <TextBlock Grid.Row="7" Grid.Column="0" Text="Long Date" ToolTip="Long date format"/>
                        <TextBox Grid.Row="7" Grid.Column="1" MaxLines="1" Text="{Binding LongDate,Mode=TwoWay}"/>
                        <TextBlock Grid.Row="8" Grid.Column="0" Text="Short Date" ToolTip="Short date format"/>
                        <TextBox Grid.Row="8" Grid.Column="1" MaxLines="1" Text="{Binding ShortDate,Mode=TwoWay}"/>
                        
                        <TextBlock Grid.Row="9" Grid.Column="0" Text="Database"/>
                        <TextBox Grid.Row="9" Grid.Column="1" MaxLines="1" Text="{Binding Svn,Mode=TwoWay}"/>
                        <TextBlock Grid.Row="10" Grid.Column="0" Text="Database Password"/>
                        <PasswordBox Grid.Row="10" Grid.Column="1" PasswordChar="*" g:PasswordHelper.Attach="True" g:PasswordHelper.Password="{Binding SvnPassword,Mode=TwoWay}"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Company" Width="500" Padding="4" Margin="0,0,0,10" HorizontalAlignment="Left">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Name"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding CompanyProfile.DisplayName,Mode=TwoWay}" />
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Address"/>
                        <TextBox Grid.Row="1" Grid.Column="1" MinLines="3" AcceptsReturn="True" Grid.ColumnSpan="3" Text="{Binding CompanyProfile.DeliveryAddresses[0].Street,Mode=TwoWay}"/>

                        <TextBlock Grid.Row="2" Grid.Column="0" Text="City"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding CompanyProfile.DeliveryAddresses[0].City,Mode=TwoWay}"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" Text="Postcode"/>
                        <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding CompanyProfile.DeliveryAddresses[0].PostalCode,Mode=TwoWay}"/>

                        <TextBlock Grid.Row="3" Grid.Column="0" Text="State"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding CompanyProfile.DeliveryAddresses[0].Region,Mode=TwoWay}"/>

                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Country"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding CompanyProfile.DeliveryAddresses[0].Country,Mode=TwoWay}"/>

                        <TextBlock Grid.Row="5" Grid.Column="0" Text="Telephone"/>
                        <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding CompanyProfile.Phones[0].FullNumber,Mode=TwoWay}"/>
                        <TextBlock Grid.Row="5" Grid.Column="2" Text="Fax"/>
                        <TextBox Grid.Row="5" Grid.Column="3" Text="{Binding CompanyProfile.Phones[1].FullNumber,Mode=TwoWay}"/>

                        <TextBlock Grid.Row="6" Grid.Column="0" Text="Mobile"/>
                        <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding CompanyProfile.Phones[2].FullNumber,Mode=TwoWay}"/>
                        <TextBox Grid.Row="6" Grid.Column="3" Text="{Binding CompanyProfile.Phones[3].FullNumber,Mode=TwoWay}"/>
                        
                        <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding CompanyProfile.Phones[4].FullNumber,Mode=TwoWay}"/>
                        <TextBox Grid.Row="7" Grid.Column="3" Text="{Binding CompanyProfile.Phones[5].FullNumber,Mode=TwoWay}"/>
                        <TextBox Grid.Row="8" Grid.Column="1" Text="{Binding CompanyProfile.Phones[6].FullNumber,Mode=TwoWay}"/>
                        <TextBox Grid.Row="8" Grid.Column="3" Text="{Binding CompanyProfile.Phones[7].FullNumber,Mode=TwoWay}"/>
                        <TextBlock Grid.Row="9" Grid.Column="0" Text="Email"/>
                        <TextBox Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding CompanyProfile.EmailAddresses[0].Address,Mode=TwoWay}"/>
                    </Grid>
                </GroupBox>
            </StackPanel>
        </DockPanel>
      </ScrollViewer>
    </DataTemplate>
    
</ResourceDictionary>