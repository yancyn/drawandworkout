// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>HLGranite.Drawing</NameSpace><Collection>ObservableCollection</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>False</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace HLGranite.Drawing
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.ObjectModel;
    using Thought.vCards;


    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Project))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InventoryWIP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Inventory))]
    public partial class BaseAttribute : System.ComponentModel.INotifyPropertyChanged
    {

        protected System.Guid guidField;

        protected string notesField;

        protected ObservableCollection<Object> tagsField;

        public System.Guid Guid
        {
            get
            {
                return this.guidField;
            }
            set
            {
                if ((this.guidField != null))
                {
                    if ((guidField.Equals(value) != true))
                    {
                        this.guidField = value;
                        this.OnPropertyChanged("Guid");
                    }
                }
                else
                {
                    this.guidField = value;
                    this.OnPropertyChanged("Guid");
                }
            }
        }

        public string Notes
        {
            get
            {
                return this.notesField;
            }
            set
            {
                if ((this.notesField != null))
                {
                    if ((notesField.Equals(value) != true))
                    {
                        this.notesField = value;
                        this.OnPropertyChanged("Notes");
                    }
                }
                else
                {
                    this.notesField = value;
                    this.OnPropertyChanged("Notes");
                }
            }
        }

        public ObservableCollection<Object> Tags
        {
            get
            {
                return this.tagsField;
            }
            set
            {
                if ((this.tagsField != null))
                {
                    if ((tagsField.Equals(value) != true))
                    {
                        this.tagsField = value;
                        this.OnPropertyChanged("Tag");
                    }
                }
                else
                {
                    this.tagsField = value;
                    this.OnPropertyChanged("Tag");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class WorkOrder : System.ComponentModel.INotifyPropertyChanged
    {

        private System.Guid guidField;

        private ObservableCollection<WorkItem> itemsField;

        public System.Guid Guid
        {
            get
            {
                return this.guidField;
            }
            set
            {
                if ((this.guidField != null))
                {
                    if ((guidField.Equals(value) != true))
                    {
                        this.guidField = value;
                        this.OnPropertyChanged("Guid");
                    }
                }
                else
                {
                    this.guidField = value;
                    this.OnPropertyChanged("Guid");
                }
            }
        }

        public ObservableCollection<WorkItem> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items");
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class Stock : BaseElement { }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Warehouse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Stock))]
    public partial class BaseElement : System.ComponentModel.INotifyPropertyChanged
    {

        private string codeField;

        private string name1Field;

        private string name2Field;

        private string notesField;

        private ObservableCollection<Object> tagField;

        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code");
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code");
                }
            }
        }

        public string Name1
        {
            get
            {
                return this.name1Field;
            }
            set
            {
                if ((this.name1Field != null))
                {
                    if ((name1Field.Equals(value) != true))
                    {
                        this.name1Field = value;
                        this.OnPropertyChanged("Name1");
                    }
                }
                else
                {
                    this.name1Field = value;
                    this.OnPropertyChanged("Name1");
                }
            }
        }

        public string Name2
        {
            get
            {
                return this.name2Field;
            }
            set
            {
                if ((this.name2Field != null))
                {
                    if ((name2Field.Equals(value) != true))
                    {
                        this.name2Field = value;
                        this.OnPropertyChanged("Name2");
                    }
                }
                else
                {
                    this.name2Field = value;
                    this.OnPropertyChanged("Name2");
                }
            }
        }

        public string Notes
        {
            get
            {
                return this.notesField;
            }
            set
            {
                if ((this.notesField != null))
                {
                    if ((notesField.Equals(value) != true))
                    {
                        this.notesField = value;
                        this.OnPropertyChanged("Notes");
                    }
                }
                else
                {
                    this.notesField = value;
                    this.OnPropertyChanged("Notes");
                }
            }
        }

        public ObservableCollection<Object> Tag
        {
            get
            {
                return this.tagField;
            }
            set
            {
                if ((this.tagField != null))
                {
                    if ((tagField.Equals(value) != true))
                    {
                        this.tagField = value;
                        this.OnPropertyChanged("Tag");
                    }
                }
                else
                {
                    this.tagField = value;
                    this.OnPropertyChanged("Tag");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class Warehouse : BaseElement
    {

        private vCardDeliveryAddressCollection addressesField;

        public vCardDeliveryAddressCollection Addresses
        {
            get
            {
                return this.addressesField;
            }
            set
            {
                if ((this.addressesField != null))
                {
                    if ((addressesField.Equals(value) != true))
                    {
                        this.addressesField = value;
                        this.OnPropertyChanged("Addresses");
                    }
                }
                else
                {
                    this.addressesField = value;
                    this.OnPropertyChanged("Addresses");
                }
            }
        }
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkItem))]
    public partial class BaseWorkItem : ShapeItem
    {

        protected System.Guid guidField;

        protected DateTime dateField;

        protected string notesField;

        protected Unit uomField;

        protected double widthField;

        protected double heightField;

        protected ObservableCollection<Object> tagsField;

        public System.Guid Guid
        {
            get
            {
                return this.guidField;
            }
            set
            {
                if ((this.guidField != null))
                {
                    if ((guidField.Equals(value) != true))
                    {
                        this.guidField = value;
                        this.OnPropertyChanged("Guid");
                    }
                }
                else
                {
                    this.guidField = value;
                    this.OnPropertyChanged("Guid");
                }
            }
        }

        public string Notes
        {
            get
            {
                return this.notesField;
            }
            set
            {
                if ((this.notesField != null))
                {
                    if ((notesField.Equals(value) != true))
                    {
                        this.notesField = value;
                        this.OnPropertyChanged("Notes");
                    }
                }
                else
                {
                    this.notesField = value;
                    this.OnPropertyChanged("Notes");
                }
            }
        }

        public Unit Uom
        {
            get
            {
                return this.uomField;
            }
            set
            {
                if ((uomField.Equals(value) != true))
                {
                    this.uomField = value;
                    this.OnPropertyChanged("Uom");
                }
            }
        }

        public ObservableCollection<Object> Tags
        {
            get
            {
                return this.tagsField;
            }
            set
            {
                if ((this.tagsField != null))
                {
                    if ((tagsField.Equals(value) != true))
                    {
                        this.tagsField = value;
                        this.OnPropertyChanged("Tag");
                    }
                }
                else
                {
                    this.tagsField = value;
                    this.OnPropertyChanged("Tag");
                }
            }
        }
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RectItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipseItem))]
    public partial class WorkItem : BaseWorkItem
    {

        protected Employee workedByField;

        protected Stock materialField;

        protected ObservableCollection<ShapeItem> elementsField;

        protected ObservableCollection<LengthItem> lengthsField;

        protected WorkStatus statusField;

        protected decimal progressField;

        protected ShapeItem shapeItemField;

        protected ObservableCollection<Log> logsField;

        public System.DateTime WorkedAt
        {
            get
            {
                return this.dateField;
            }
            set
            {
                if ((dateField.Equals(value) != true))
                {
                    this.dateField = value;
                    this.OnPropertyChanged("WorkedAt");
                }
            }
        }

        public Employee WorkedBy
        {
            get
            {
                return this.workedByField;
            }
            set
            {
                if ((this.workedByField != null))
                {
                    if ((workedByField.Equals(value) != true))
                    {
                        this.workedByField = value;
                        this.OnPropertyChanged("WorkedBy");
                    }
                }
                else
                {
                    this.workedByField = value;
                    this.OnPropertyChanged("WorkedBy");
                }
            }
        }

        public double MaxWidth
        {
            get
            {
                return this.widthField;
            }
            set
            {
                if ((widthField.Equals(value) != true))
                {
                    this.widthField = value;
                    this.OnPropertyChanged("MaxWidth");
                }
            }
        }

        public double MaxHeight
        {
            get
            {
                return this.heightField;
            }
            set
            {
                if ((heightField.Equals(value) != true))
                {
                    this.heightField = value;
                    this.OnPropertyChanged("MaxHeight");
                }
            }
        }

        public Stock Material
        {
            get
            {
                return this.materialField;
            }
            set
            {
                if ((this.materialField != null))
                {
                    if ((materialField.Equals(value) != true))
                    {
                        this.materialField = value;
                        this.OnPropertyChanged("Material");
                    }
                }
                else
                {
                    this.materialField = value;
                    this.OnPropertyChanged("Material");
                }
            }
        }

        public ObservableCollection<ShapeItem> Elements
        {
            get
            {
                return this.elementsField;
            }
            set
            {
                if ((this.elementsField != null))
                {
                    if ((elementsField.Equals(value) != true))
                    {
                        this.elementsField = value;
                        this.OnPropertyChanged("Elements");
                    }
                }
                else
                {
                    this.elementsField = value;
                    this.OnPropertyChanged("Elements");
                }
            }
        }

        public ObservableCollection<LengthItem> Lengths
        {
            get
            {
                return this.lengthsField;
            }
            set
            {
                if ((this.lengthsField != null))
                {
                    if ((lengthsField.Equals(value) != true))
                    {
                        this.lengthsField = value;
                        this.OnPropertyChanged("Lengths");
                    }
                }
                else
                {
                    this.lengthsField = value;
                    this.OnPropertyChanged("Lengths");
                }
            }
        }

        public ObservableCollection<Log> Logs
        {
            get
            {
                return this.logsField;
            }
            set
            {
                if ((this.logsField != null))
                {
                    if ((logsField.Equals(value) != true))
                    {
                        this.logsField = value;
                        this.OnPropertyChanged("Logs");
                    }
                }
                else
                {
                    this.logsField = value;
                    this.OnPropertyChanged("Logs");
                }
            }
        }

        public WorkStatus Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                if ((statusField.Equals(value) != true))
                {
                    this.statusField = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }

        /// <summary>
        /// Progress in percentage for this work item only.
        /// </summary>
        public decimal Progress
        {
            get
            {
                return this.progressField;
            }
            set
            {
                if ((this.progressField != null))
                {
                    if ((progressField.Equals(value) != true))
                    {
                        this.progressField = value;
                        this.OnPropertyChanged("Progress");
                    }
                }
                else
                {
                    this.progressField = value;
                    this.OnPropertyChanged("Progress");
                }
            }
        }
    }

    public partial class Employee : User { }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Employee))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Customer))]
    //TODO: [System.Xml.Serialization.XmlIncludeAttribute(typeof(Planner))]
    //TODO: [System.Xml.Serialization.XmlIncludeAttribute(typeof(Admin))]
    public partial class User : vCard, System.ComponentModel.INotifyPropertyChanged
    {

        protected UserRole typeField;

        public UserRole Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((typeField.Equals(value) != true))
                {
                    this.typeField = value;
                    this.OnPropertyChanged("Type");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public enum UserRole
    {

        /// <remarks/>
        Admin,

        /// <remarks/>
        Planner,

        /// <remarks/>
        Employee,

        /// <remarks/>
        Customer,

        /// <remarks/>
        Supplier,
    }

    public partial class Customer : User { }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VerticalLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HorizontalLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bullnose))]
    public partial class ShapeItem : System.ComponentModel.INotifyPropertyChanged
    {

        protected double topField;

        protected double leftField;

        protected string modelField;

        public string Model
        {
            get
            {
                return this.modelField;
            }
            set
            {
                if (this.modelField != null)
                {
                    if ((modelField.Equals(value) != true))
                    {
                        this.modelField = value;
                        this.OnPropertyChanged("Model");
                    }
                }
                else
                {
                    this.modelField = value;
                    this.OnPropertyChanged("Model");
                }
            }
        }

        public double Top
        {
            get { return this.topField; }
            set
            {
                if (this.topField.Equals(value) != true)
                {
                    this.topField = value;
                    this.OnPropertyChanged("Top");
                }
            }
        }

        public double Left
        {
            get
            {
                return this.leftField;
            }
            set
            {
                if ((leftField.Equals(value) != true))
                {
                    this.leftField = value;
                    this.OnPropertyChanged("Left");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class VerticalLine : ShapeItem { }

    public partial class HorizontalLine : ShapeItem { }

    public partial class LabelShape : ShapeItem { }

    public partial class RectItem : WorkItem //, System.ComponentModel.INotifyPropertyChanged
    {

        public double Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                if ((widthField.Equals(value) != true))
                {
                    this.widthField = value;
                    this.OnPropertyChanged("Width");
                }
            }
        }

        public double Height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                if ((heightField.Equals(value) != true))
                {
                    this.heightField = value;
                    this.OnPropertyChanged("Height");
                }
            }
        }
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZShapeItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UShapeItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TriangleItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LShapeItem))]
    public partial class PolygonItem : WorkItem { }

    public partial class Log : System.ComponentModel.INotifyPropertyChanged
    {

        protected DateTime atField;

        protected Employee byField;

        protected object tagField;

        public DateTime At
        {
            get
            {
                return this.atField;
            }
            set
            {
                if (this.atField != null)
                {
                    if ((atField.Equals(value) != true))
                    {
                        this.atField = value;
                        this.OnPropertyChanged("At");
                    }
                }
                else
                {
                    this.atField = value;
                    this.OnPropertyChanged("At");
                }
            }
        }

        public Employee By
        {
            get { return this.byField; }
            set
            {
                if (this.byField != null)
                {
                    if (this.byField.Equals(value) != true)
                    {
                        this.byField = value;
                        this.OnPropertyChanged("By");
                    }
                }
                else
                {
                    this.byField = value;
                    this.OnPropertyChanged("By");
                }
            }
        }

        public object Tag
        {
            get { return this.tagField; }
            set
            {
                if (this.tagField != null)
                {
                    if (this.tagField.Equals(value) != true)
                    {
                        this.tagField = value;
                        this.OnPropertyChanged("Tag");
                    }
                }
                else
                {
                    this.tagField = value;
                    this.OnPropertyChanged("Tag");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class LengthItem : System.ComponentModel.INotifyPropertyChanged
    {

        private double lengthField;

        private Bullnose typeField;

        public double Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                if ((lengthField.Equals(value) != true))
                {
                    this.lengthField = value;
                    this.OnPropertyChanged("Length");
                }
            }
        }

        public Bullnose Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("Type");
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("Type");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class Bullnose : ShapeItem
    {

        private double widthField;

        private double heightField;

        public double Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                if ((widthField.Equals(value) != true))
                {
                    this.widthField = value;
                    this.OnPropertyChanged("Width");
                }
            }
        }

        public double Height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                if ((heightField.Equals(value) != true))
                {
                    this.heightField = value;
                    this.OnPropertyChanged("Height");
                }
            }
        }
    }
    public partial class Bullnoses : DatabaseObject
    {

        private ObservableCollection<Bullnose> bullnoseField;

        public ObservableCollection<Bullnose> Bullnose
        {
            get { return this.bullnoseField; }
            set
            {
                if (this.bullnoseField != null)
                {
                    if (this.bullnoseField.Equals(value) != true)
                    {
                        this.bullnoseField = value;
                        this.OnPropertyChanged("Bullnose");
                    }
                }
                else
                {
                    this.bullnoseField = value;
                    this.OnPropertyChanged("Bullnose");
                }
            }
        }
    }

    public partial class ZShapeItem : PolygonItem { }

    public partial class UShapeItem : PolygonItem { }

    public partial class TriangleItem : PolygonItem { }

    public partial class LShapeItem : PolygonItem { }

    public partial class EllipseItem : WorkItem
    {

        public double Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                if ((widthField.Equals(value) != true))
                {
                    this.widthField = value;
                    this.OnPropertyChanged("Width");
                }
            }
        }

        public double Height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                if ((heightField.Equals(value) != true))
                {
                    this.heightField = value;
                    this.OnPropertyChanged("Height");
                }
            }
        }
    }

    public enum WorkStatus
    {

        /// <remarks/>
        NotStarted,

        /// <remarks/>
        InProgress,

        /// <remarks/>
        Completed,

        /// <remarks/>
        Rework,
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InventoryWIP))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Inventory))]
    public partial class BaseItem : BaseAttribute
    {

        private Unit uomField;

        /// <summary>
        /// Gets or sets Unit of measurement.
        /// </summary>
        public Unit Uom
        {
            get
            {
                return this.uomField;
            }
            set
            {
                if ((uomField.Equals(value) != true))
                {
                    this.uomField = value;
                    this.OnPropertyChanged("Uom");
                }
            }
        }
    }

    public enum Unit
    {

        /// <remarks/>
        Metric,

        /// <remarks/>
        British,
    }

    public partial class InventoryWIP : BaseItem
    {

        private double widthField;

        private double heightField;

        private WorkItem workItemField;

        public double Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                if ((widthField.Equals(value) != true))
                {
                    this.widthField = value;
                    this.OnPropertyChanged("Width");
                }
            }
        }

        public double Height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                if ((heightField.Equals(value) != true))
                {
                    this.heightField = value;
                    this.OnPropertyChanged("Height");
                }
            }
        }

        public WorkItem WorkItem
        {
            get { return this.workItemField; }
            set
            {
                if (this.workItemField != null)
                {
                    if (this.workItemField.Equals(value) != true)
                    {
                        this.workItemField = value;
                        this.OnPropertyChanged("WorkItem");
                    }
                }
                else
                {
                    this.workItemField = value;
                    this.OnPropertyChanged("WorkItem");
                }
            }
        }
    }

    public partial class Inventory : BaseItem
    {

        private System.DateTime purchaseAtField;

        private string serialField;

        private Stock stockField;

        private Warehouse warehouseField;

        private ObservableCollection<InventoryWIP> collectionField;

        public System.DateTime PurchaseAt
        {
            get
            {
                return this.purchaseAtField;
            }
            set
            {
                if ((purchaseAtField.Equals(value) != true))
                {
                    this.purchaseAtField = value;
                    this.OnPropertyChanged("PurchaseAt");
                }
            }
        }

        public double Width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                if ((widthField.Equals(value) != true))
                {
                    this.widthField = value;
                    this.OnPropertyChanged("Width");
                }
            }
        }

        public double Height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                if ((heightField.Equals(value) != true))
                {
                    this.heightField = value;
                    this.OnPropertyChanged("Height");
                }
            }
        }

        public Stock Stock
        {
            get
            {
                return this.stockField;
            }
            set
            {
                if ((this.stockField != null))
                {
                    if ((stockField.Equals(value) != true))
                    {
                        this.stockField = value;
                        this.OnPropertyChanged("Stock");
                    }
                }
                else
                {
                    this.stockField = value;
                    this.OnPropertyChanged("Stock");
                }
            }
        }

        public Warehouse Warehouse
        {
            get
            {
                return this.warehouseField;
            }
            set
            {
                if ((this.warehouseField != null))
                {
                    if ((warehouseField.Equals(value) != true))
                    {
                        this.warehouseField = value;
                        this.OnPropertyChanged("Warehouse");
                    }
                }
                else
                {
                    this.warehouseField = value;
                    this.OnPropertyChanged("Warehouse");
                }
            }
        }

        public string Serial
        {
            get { return this.serialField; }
            set
            {
                if (this.serialField != null)
                {
                    if (this.serialField.Equals(value) != true)
                    {
                        this.serialField = value;
                        this.OnPropertyChanged("Serial");
                    }
                }
                else
                {
                    this.serialField = value;
                    this.OnPropertyChanged("Serial");
                }
            }
        }

        public ObservableCollection<InventoryWIP> Collection
        {
            get { return this.collectionField; }
            set
            {
                if (this.collectionField != null)
                {
                    if (this.collectionField.Equals(value) != true)
                    {
                        this.collectionField = value;
                        this.OnPropertyChanged("Collection");
                    }
                }
                else
                {
                    this.collectionField = value;
                    this.OnPropertyChanged("Collection");
                }
            }
        }
    }

    public partial class Project : BaseAttribute
    {

        private System.DateTime createdAtField;

        private Employee createdByField;

        private Customer orderByField;

        private Customer deliverToField;

        private System.DateTime? dueDateField;

        private ObservableCollection<WorkOrder> workOrdersField;

        private ProjectStage stageField;

        private ObservableCollection<Log> logsField;

        public System.DateTime CreatedAt
        {
            get
            {
                return this.createdAtField;
            }
            set
            {
                if ((createdAtField.Equals(value) != true))
                {
                    this.createdAtField = value;
                    this.OnPropertyChanged("CreatedAt");
                }
            }
        }

        /// <summary>
        /// Gets or sets created person. Normally is the planner.
        /// </summary>
        public Employee CreatedBy
        {
            get
            {
                return this.createdByField;
            }
            set
            {
                if ((this.createdByField != null))
                {
                    if ((createdByField.Equals(value) != true))
                    {
                        this.createdByField = value;
                        this.OnPropertyChanged("CreatedBy");
                    }
                }
                else
                {
                    this.createdByField = value;
                    this.OnPropertyChanged("CreatedBy");
                }
            }
        }

        /// <summary>
        /// Person who order this project might be a direct customer or an agent.
        /// </summary>
        public Customer OrderBy
        {
            get
            {
                return this.orderByField;
            }
            set
            {
                if ((this.orderByField != null))
                {
                    if ((orderByField.Equals(value) != true))
                    {
                        this.orderByField = value;
                        this.OnPropertyChanged("OrderBy");
                    }
                }
                else
                {
                    this.orderByField = value;
                    this.OnPropertyChanged("OrderBy");
                }
            }
        }

        /// <summary>
        /// Address where to delivery.
        /// </summary>
        public Customer DeliverTo
        {
            get
            {
                return this.deliverToField;
            }
            set
            {
                if ((this.deliverToField != null))
                {
                    if ((deliverToField.Equals(value) != true))
                    {
                        this.deliverToField = value;
                        this.OnPropertyChanged("DeliverTo");
                    }
                }
                else
                {
                    this.deliverToField = value;
                    this.OnPropertyChanged("DeliveryTo");
                }
            }
        }

        public System.DateTime? DueDate
        {
            get
            {
                return this.dueDateField;
            }
            set
            {
                if ((createdAtField.Equals(value) != true))
                {
                    this.dueDateField = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        /// <summary>
        /// Gets or sets work order collection for this project.
        /// </summary>
        public ObservableCollection<WorkOrder> WorkOrders
        {
            get
            {
                return this.workOrdersField;
            }
            set
            {
                if ((this.workOrdersField != null))
                {
                    if ((workOrdersField.Equals(value) != true))
                    {
                        this.workOrdersField = value;
                        this.OnPropertyChanged("WorkOrders");
                    }
                }
                else
                {
                    this.workOrdersField = value;
                    this.OnPropertyChanged("WorkOrders");
                }
            }
        }

        /// <summary>
        /// Gets or sets latest project status i.e. Draft, Quotation, or delivered.
        /// </summary>
        public ProjectStage Stage
        {
            get
            {
                return this.stageField;
            }
            set
            {
                if ((stageField.Equals(value) != true))
                {
                    this.stageField = value;
                    this.OnPropertyChanged("Stage");
                }
            }
        }

        public ObservableCollection<Log> Logs
        {
            get
            {
                return this.logsField;
            }
            set
            {
                if ((this.logsField != null))
                {
                    if ((logsField.Equals(value) != true))
                    {
                        this.logsField = value;
                        this.OnPropertyChanged("Logs");
                    }
                }
                else
                {
                    this.logsField = value;
                    this.OnPropertyChanged("Logs");
                }
            }
        }
    }

    public enum ProjectStage
    {

        /// <remarks/>
        Draft,

        /// <remarks/>
        Quotation,

        /// <remarks/>
        Manufacture,

        /// <remarks/>
        Delivered,

        /// <remarks/>
        Invoice,

        /// <remarks/>
        Paid,
    }

    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Warehouses))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Stocks))]
    //TODO: [System.Xml.Serialization.XmlIncludeAttribute(typeof(Users))]
    //TODO: [System.Xml.Serialization.XmlIncludeAttribute(typeof(Projects))]
    //TODO: [System.Xml.Serialization.XmlIncludeAttribute(typeof(InventoryWIPs))]
    //TODO: [System.Xml.Serialization.XmlIncludeAttribute(typeof(Inventories))]
    public partial class DatabaseObject : System.ComponentModel.INotifyPropertyChanged
    {

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class Warehouses : DatabaseObject
    {

        private ObservableCollection<Warehouse> warehouseField;

        public ObservableCollection<Warehouse> Warehouse
        {
            get
            {
                return this.warehouseField;
            }
            set
            {
                if ((this.warehouseField != null))
                {
                    if ((warehouseField.Equals(value) != true))
                    {
                        this.warehouseField = value;
                        this.OnPropertyChanged("Warehouse");
                    }
                }
                else
                {
                    this.warehouseField = value;
                    this.OnPropertyChanged("Warehouse");
                }
            }
        }
    }

    public partial class Users : DatabaseObject
    {

        private ObservableCollection<User> userField;

        public ObservableCollection<User> User
        {
            get
            {
                return this.userField;
            }
            set
            {
                if ((this.userField != null))
                {
                    if ((userField.Equals(value) != true))
                    {
                        this.userField = value;
                        this.OnPropertyChanged("User");
                    }
                }
                else
                {
                    this.userField = value;
                    this.OnPropertyChanged("User");
                }
            }
        }
    }

    public partial class Stocks : DatabaseObject
    {

        private ObservableCollection<Stock> stockField;

        public ObservableCollection<Stock> Stock
        {
            get
            {
                return this.stockField;
            }
            set
            {
                if ((this.stockField != null))
                {
                    if ((stockField.Equals(value) != true))
                    {
                        this.stockField = value;
                        this.OnPropertyChanged("Stock");
                    }
                }
                else
                {
                    this.stockField = value;
                    this.OnPropertyChanged("Stock");
                }
            }
        }
    }

    public partial class Projects : DatabaseObject
    {

        private ObservableCollection<Project> projectField;

        public ObservableCollection<Project> Project
        {
            get
            {
                return this.projectField;
            }
            set
            {
                if ((this.projectField != null))
                {
                    if ((projectField.Equals(value) != true))
                    {
                        this.projectField = value;
                        this.OnPropertyChanged("Project");
                    }
                }
                else
                {
                    this.projectField = value;
                    this.OnPropertyChanged("Project");
                }
            }
        }
    }

    public partial class Inventories : DatabaseObject
    {

        private ObservableCollection<Inventory> inventoryField;

        public ObservableCollection<Inventory> Inventory
        {
            get
            {
                return this.inventoryField;
            }
            set
            {
                if ((this.inventoryField != null))
                {
                    if ((inventoryField.Equals(value) != true))
                    {
                        this.inventoryField = value;
                        this.OnPropertyChanged("Inventory");
                    }
                }
                else
                {
                    this.inventoryField = value;
                    this.OnPropertyChanged("Inventory");
                }
            }
        }
    }

    public partial class InventoryManager : System.ComponentModel.INotifyPropertyChanged
    {

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}